# 1. Modify those variables for your project
substitutions:
  name: esphome-battery
  friendly_name: ESPHome Battery
  static_ip: 192.168.1.2
  gateway: 192.168.1.1
  subnet: 255.255.255.0
  dns1: 192.168.1.1

# 2. General ESPHome configuration
esphome:
  name: ${name}
  friendly_name: ${name}

# esp32:
#   board: lolin_c3_mini
esp8266:
  board: d1_mini

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret ha_encryption_key

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: ${static_ip}
    gateway: ${gateway}
    subnet: ${subnet}
    dns1: ${dns1}
  # Turn off Wi-Fi when not needed
  power_save_mode: LIGHT
  # Directly connects to WiFi network without doing a full scan first
  fast_connect: True

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: '${name} Fallback Hotspot'
    password: !secret ota_password

captive_portal:

# 3. I/O and sensors configuration

# Enable deep sleep
deep_sleep:
  run_duration: 1min # Time the device will stay awake
  sleep_duration: 15min # Time the device will sleep

sensor:
  - platform: adc
    pin: A0
    name: '${name}.battery_vcc'
    id: "VCC"
    accuracy_decimals: 3
    update_interval: 2s
    filters:
      - multiply: 3.7
      - median:
          window_size: 10
          send_every: 10

  - platform: template
    name: '${name}.battery_level'
    unit_of_measurement: '%'
    update_interval: 30s
    # GSheet to adjust the formula : https://docs.google.com/spreadsheets/d/11nqQ33RI-67FxzwYrnD6VhjXXPpyEyggCS_ZL0jhZMQ/edit?usp=sharing
    lambda: |-
      float voltage = id(VCC).state;
      if (voltage >= 3.7) {
        return 100.0;
      } else if (voltage > 2.7) {
        return ((id(VCC).state * 80.00) - 196.00);
      } else if (voltage > 2.3) {
        return ((id(VCC).state * 50.00) - 115.00);
      } else {
        return 0.0;
      }